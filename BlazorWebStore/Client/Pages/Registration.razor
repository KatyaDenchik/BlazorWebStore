@page "/registration"
@using Client.Services
@using ComponentsCommon
@using global::Shared.DTOs
@using global::Shared.Models
@inject NavigationManager Navigation
@inject CookiesAuthServices CookiesAuthServices

<div class="registration-page">
<EditForm Model="registerModel" OnValidSubmit="HandleRegister">
    <DataAnnotationsValidator />
        <CustomInput Label="Email:" @bind-Value="registerModel.Email" />

        <CustomInput Label="Password:" Type="password" @bind-Value="registerModel.Password" />

        <CustomInput Label="Confirm Password:" Type="password" @bind-Value="registerModel.ConfirmPassword" />

        <CustomButton Type="submit">Register</CustomButton>
</EditForm>
</div>

@code {
    private RegisterModel registerModel = new();

    private async Task HandleRegister()
    {
        if (registerModel.Password != registerModel.ConfirmPassword)
        {
            Console.WriteLine("Passwords do not match");
            return;
        }

        var success = await CookiesAuthServices.RegisterAsync(registerModel);

        if (success)
        {
            Console.WriteLine("Registration successful");
            Navigation.NavigateTo("/login");
        }
        else
        {
            Console.WriteLine("Registration failed");
        }
    }
}
